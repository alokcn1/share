# requires: splitvt, gdb, pptp, nethogs, htop

ACCOUNT=${ACCOUNT:-host}
CLIENTS="origin np1 nof nop nopw nos mora"
TARGET=${TARGET:-okcn}

export ACCOUNT
export TARGET

BIN="/usr/local/bin/"
LOG="/var/log/mowol/"
RUN="/var/run/mowol/"
TMP="/var/tmp/mowol/"

mkdir -p ${BIN}
mkdir -p ${LOG}/clients
mkdir -p ${RUN}
mkdir -p ${TMP}
mkdir -p /etc/mowol

function daemon() {
  nohup ${*} &
}

function debugdaemon() {
  nohup gdb --batch -ex "handle SIGPIPE nostop" -ex "set print thread-events off" -ex run -ex "bt full" --args ${*} &
}

function isrunning() {
  return `kill -0 ${1} 2>/dev/null`
}

function ~mowoldaemon() {
  LOGFILE=$(~mowollog ${1})
  NAME=${TARGET}-${ACCOUNT}-${1}
  if ~mowolisrunning ${1}; then
    echo ${1} is already running with pid $(~mowolpid ${1})
    return
  fi
  if [ "${ACCOUNT}" == "host" ]; then
    debugdaemon ${BIN}${NAME} >${LOGFILE} 2>${LOGFILE}.log
  else
    daemon ${BIN}${NAME} >>${LOGFILE} 2>>${LOGFILE}.log
  fi
  sleep 1
}

function ~mowollog() {
  if [ "${1}" == "server" ]; then
    echo ${LOG}${TARGET}-${ACCOUNT}-server
  elif [ "${TARGET}" == "okcn" ]; then
    echo ${LOG}clients/${TARGET}-${ACCOUNT}-${1}
  else
    echo /tmp/com/${1}
  fi
}

function ~mowolisrunning() {
  LOGFILE=$(~mowollog ${1})
  if [ -f ${LOGFILE} ]; then
    PID=$(~mowolpid ${LOGFILE})
    return `isrunning ${PID}`
  fi
  return 1
}

function ~mowolpid() {
  grep join ${1} | tail -n1 | cut -f7 -d\  | sed 's/,//'
}

function ~mowolpipe() {
  if [ "${*}" != "" ]; then
    echo ${*} >${PIPE}
  else
    echo -n "${PIPE}$ "
    while read LINE; do
      echo -n "${PIPE}$ "
      echo ${LINE} >${PIPE}
    done
  fi
}

function ~mowolservice() {
  if [ "${2}" == "start" ]; then
    ~mowoldaemon ${1}
  elif [ "${2}" == "stop" ]; then
    mowolcommand ${1} quit
  elif [ "${2}" == "restart" ]; then
    if ~mowolisrunning ${1}; then
      ~mowolservice ${1} stop
      while ~mowolisrunning ${1}; do
        echo -n .
        sleep 1
      done
      echo
    fi
    ~mowolservice ${1} start
  fi
}

function mowol() {
  if [ -p "${1}" ]; then
    PIPE=${1} ~mowolpipe "${2,}"
  else
    splitvt -s 70 -bottom -upper "tail -f ${1}"
  fi
}

function mowolbroadcast() {
  for C in ${CLIENTS}; do
    mowolcommand ${C} "${*}"
  done
}

function mowolcommand() {
  NAME=${TARGET}-${ACCOUNT}-${1}
  if ~mowolisrunning ${1}; then
  shift
    mowol ${RUN}${NAME}.pipe "${*}"
  else
    echo ${1} is not running
  fi
}

function mowolclient() {
  ~mowolservice ${1} ${2}
}

function mowolclients() {
  for C in ${CLIENTS}; do
    { mowolclient ${C} ${1} >/dev/null & } 2>/dev/null
  done
  mowolbroadcast selloff all
  for JOB in `jobs -p`; do
    wait ${JOB} 2>/dev/null || let 1
    echo -n -
  done
  echo
}

function mowolmonitor() {
  NAME=${TARGET}-${ACCOUNT}-${1}
  if [ "${TARGET}" == "okcn" ]; then
    s50 ${LOG}clients/${NAME} ${RUN}${NAME}.com
  else
    s50 /tmp/com/${1} ${RUN}${NAME}.com
  fi
}

function mowolserver() {
  ~mowolservice server ${1}
}

function s50() {
  tput rmam
  splitvt -lower "tail -n50 -f ${2}" -upper "tail -n250 -f ${1}"
}

function wo() {
#  egrep ${1}:.*completed\ ${2}\|min30.*hour1
  egrep ${1}:.*${2}\|min30.*hour1
}

function wba() {
  wo ${1} buy | grep -A10 ${1} | less -r
}

function wbb() {
  wo ${1} buy | grep -B10 ${1} | less -r
}

function wsa() {
  wo ${1} sell | grep -A10 ${1} | less -r
}

function wsb() {
  wo ${1} sell | grep -B10 ${1} | less -r
}

alias mowolstats='tail -n1000 | grep -A113 -B5 "bollinger"'
alias mowolstatsreset='grep "reset state" *.log | sed "s/.*[0-9n]://" | sort | uniq -c'
alias mowolstatscode='grep "with error code" *.log | sed "s/.*refused//" | sort | uniq -c'
alias s10='splitvt -s 10'
alias s70='splitvt -s 70'
alias t50='tail -n50'

#set -x
"$@"
